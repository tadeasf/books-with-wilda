version: '3.8'

services:
  # Next.js application with Bun
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
        - AUTH0_DOMAIN=${AUTH0_DOMAIN}
        - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
        - AUTH0_CALLBACK_URL=${AUTH0_CALLBACK_URL}
        - AUTH0_SECRET=${AUTH0_SECRET}
        - APP_BASE_URL=${APP_BASE_URL}
    ports:
      - "3000:3000"
    environment:
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_CALLBACK_URL=${AUTH0_CALLBACK_URL}
      - AUTH0_SECRET=${AUTH0_SECRET}
      - APP_BASE_URL=${APP_BASE_URL}
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      - directus
    networks:
      - app-network

  # PostgreSQL for Directus
  directus-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: directus
      POSTGRES_PASSWORD: ${DIRECTUS_DB_PASSWORD:-directus_password}
      POSTGRES_DB: directus
    volumes:
      - directus-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U directus"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  # Directus CMS
  directus:
    image: directus/directus:latest
    ports:
      - "8055:8055"
    environment:
      KEY: ${DIRECTUS_KEY:-directus-key-random-string}
      SECRET: ${DIRECTUS_SECRET:-directus-secret-random-string}
      DB_CLIENT: 'pg'
      DB_HOST: 'directus-db'
      DB_PORT: '5432'
      DB_DATABASE: 'directus'
      DB_USER: 'directus'
      DB_PASSWORD: ${DIRECTUS_DB_PASSWORD:-directus_password}
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD:-admin_password}
      PUBLIC_URL: ${DIRECTUS_PUBLIC_URL:-http://localhost:8055}
      CORS_ENABLED: 'true'
      CORS_ORIGIN: ${APP_BASE_URL:-http://localhost:3000}
    volumes:
      - directus-uploads:/directus/uploads
      - directus-extensions:/directus/extensions
    depends_on:
      directus-db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  # PostgreSQL for Discourse
  discourse-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: discourse
      POSTGRES_PASSWORD: ${DISCOURSE_DB_PASSWORD:-discourse_password}
      POSTGRES_DB: discourse
    volumes:
      - discourse-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U discourse"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  # Redis for Discourse
  discourse-redis:
    image: redis:7-alpine
    volumes:
      - discourse-redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  # Discourse
  discourse:
    image: bitnami/discourse:latest
    ports:
      - "3080:3000"
    environment:
      - DISCOURSE_DATABASE_HOST=discourse-db
      - DISCOURSE_DATABASE_PORT_NUMBER=5432
      - DISCOURSE_DATABASE_USER=discourse
      - DISCOURSE_DATABASE_PASSWORD=${DISCOURSE_DB_PASSWORD:-discourse_password}
      - DISCOURSE_DATABASE_NAME=discourse
      - DISCOURSE_REDIS_HOST=discourse-redis
      - DISCOURSE_REDIS_PORT_NUMBER=6379
      - DISCOURSE_HOSTNAME=${DISCOURSE_HOSTNAME:-localhost}
      - DISCOURSE_SITE_NAME=${DISCOURSE_SITE_NAME:-Books With Wilda Forum}
      - DISCOURSE_USERNAME=${DISCOURSE_ADMIN_USERNAME:-admin}
      - DISCOURSE_PASSWORD=${DISCOURSE_ADMIN_PASSWORD:-password123}
      - DISCOURSE_EMAIL=${DISCOURSE_ADMIN_EMAIL:-admin@example.com}
      - ALLOW_EMPTY_PASSWORD=no
      - DISCOURSE_EXTERNAL_HOSTNAME=${DISCOURSE_EXTERNAL_HOSTNAME:-localhost}
    volumes:
      - discourse-data:/bitnami/discourse
    depends_on:
      discourse-db:
        condition: service_healthy
      discourse-redis:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  # Directus volumes
  directus-db-data:
  directus-uploads:
  directus-extensions:
  
  # Discourse volumes
  discourse-db-data:
  discourse-redis-data:
  discourse-data: